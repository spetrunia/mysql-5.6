source include/have_debug.inc;
source ../include/raft_3_node.inc;

--disable_query_log
call mtr.add_suppression(".*using --replicate-same-server-id in conjunction with --log-slave-updates.*");
--enable_query_log

# Create connections to server 4 and 5 (these are not in the ring)
let $rpl_server_number= 4;
let $rpl_connection_name= server_4;
source include/rpl_connect.inc;
--disable_query_log
connection server_4;
call mtr.add_suppression(".*using --replicate-same-server-id in conjunction with --log-slave-updates.*");
--enable_query_log

let $rpl_server_number= 5;
let $rpl_connection_name= server_5;
source include/rpl_connect.inc;
--disable_query_log
connection server_5;
call mtr.add_suppression(".*using --replicate-same-server-id in conjunction with --log-slave-updates.*");
--enable_query_log

connection server_1;
show status like 'rpl_raft_role';

connection server_2;
show status like 'rpl_raft_role';

connection server_3;
show status like 'rpl_raft_role';

connection server_1;
create table t1 (a int primary key);

# Insert some rows into t1. This will rotate the apply log on follower for every
# insert
echo "Inserting rows into t1 on server_1";
--let $j = 1
--disable_query_log
while ($j <= 20)
{
  connection server_1;
  eval insert into t1 values($j);
  let $sync_slave_connection= server_2;
  source include/sync_slave_sql_with_master.inc;
  let $sync_slave_connection= server_3;
  source include/sync_slave_sql_with_master.inc;

  --inc $j
}
--enable_query_log
select count(*) from t1;

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

echo "Verifying apply logs on follower: server_2";
connection server_2;
let $binlog= query_get_value(SHOW MASTER STATUS, File, 1);
source include/show_binary_logs.inc;

echo "Verifying apply logs on follower: server_3";
connection server_3;
source include/show_binary_logs.inc;

echo "Sleep for 70s to expire the logs";
select sleep(70);

connection server_1;
echo "Inserting another row on leader: server_1. This will trigger auto purge on followers";
eval insert into t1 values($j);
--inc $j
select count(*) from t1;

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

connection server_2;
echo "Verifying apply logs on follower: server_2";
select count(*) from t1;
source include/show_binary_logs.inc;

connection server_3;
echo "Verifying apply logs on follower: server_3";
select count(*) from t1;
source include/show_binary_logs.inc;

echo "Transfering leadership: server_1 -> server_2";
let $rpl_raft_leader_number= 2;
source ../include/raft_promote_to_leader.inc;

connection server_2;
# Sleep for mysql master to be setup
select sleep(10);
show status like 'rpl_raft_role';

echo "Inserting some rows into t1 from leader: server_2";
--disable_query_log
while ($j <= 40)
{
  connection server_2;
  eval insert into t1 values($j);
  let $sync_slave_connection= server_1;
  source include/sync_slave_sql_with_master.inc;
  let $sync_slave_connection= server_3;
  source include/sync_slave_sql_with_master.inc;

  --inc $j
}
--enable_query_log

echo "Sleep for 70s to expire the logs";
select sleep(70);

echo "Inserting another row on leader: server_2. This will trigger auto purge on followers";
connection server_2;
eval insert into t1 values($j);
select count(*) from t1;
--inc $j

let $sync_slave_connection= server_1;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

connection server_1;
echo "Verifying apply logs on follower: server_1";
select count(*) from t1;
source include/show_binary_logs.inc;

connection server_3;
echo "Verifying apply logs on follower: server_3";
select count(*) from t1;
source include/show_binary_logs.inc;

connection server_1;
echo "Transfering leadership: server_2 -> server_1";
let $rpl_raft_leader_number= 1;
source ../include/raft_promote_to_leader.inc;
show status like 'rpl_raft_role';

echo "Inserting more rows into t1 from server_1";
connection server_1;
# Sleep for mysql master to be setup
select sleep(10);
--disable_query_log
while ($j <= 60)
{
  connection server_1;
  eval insert into t1 values($j);
  let $sync_slave_connection= server_2;
  source include/sync_slave_sql_with_master.inc;
  let $sync_slave_connection= server_3;
  source include/sync_slave_sql_with_master.inc;

  --inc $j
}
--enable_query_log

echo "Sleep for 70s to expire the logs";
select sleep(70);

echo "Inserting another row on leader: server_1. This will trigger auto purge on followers";
connection server_1;
eval insert into t1 values($j);
select count(*) from t1;
--inc $j

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

connection server_2;
echo "Verifying apply logs on follower: server_2";
select count(*) from t1;
source include/show_binary_logs.inc;

connection server_3;
echo "Verifying apply logs on follower: server_3";
select count(*) from t1;
source include/show_binary_logs.inc;

connection server_1;
drop table t1;

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

source include/rpl_end.inc;
